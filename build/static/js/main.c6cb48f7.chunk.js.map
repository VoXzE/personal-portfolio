{"version":3,"sources":["assets/site1.png","assets/site2.png","assets/site7.png","assets/site3.png","assets/site4.gif","components/Navigation/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navigation","props","className","onClick","moveToProjects","moveToContact","href","target","icon","faTwitter","faGithub","App","projectsRef","useRef","contactRef","randomNumber","min","max","Math","floor","random","useEffect","stylesArr","i","parentDiv","document","getElementsByClassName","commetDiv","createElement","style","length","append","generateCommets","Fragment","current","scrollIntoView","behavior","block","color","animationDuration","faNodeJs","faPython","faVuejs","faReact","faJs","faYarn","ref","fontSize","src","require","alt","margin","window","location","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c6cb48f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/site1.acf162ea.png\";","module.exports = __webpack_public_path__ + \"static/media/site2.12aeb152.png\";","module.exports = __webpack_public_path__ + \"static/media/site7.906f3db0.png\";","module.exports = __webpack_public_path__ + \"static/media/site3.0142684c.png\";","module.exports = __webpack_public_path__ + \"static/media/site4.94b27093.gif\";","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\ninterface NavigationPropsInterface {\r\n  moveToProjects: () => void;\r\n  moveToContact: () => void;\r\n}\r\n\r\nconst Navigation = (props: NavigationPropsInterface) => {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"left-nav\">\r\n        <div className=\"logo\"><span>Jeremiah</span> Flores</div>\r\n        <ul className=\"navigation-links\">\r\n          <li className=\"navigation-item\" onClick={() => props.moveToProjects()}>Projects</li>\r\n          <li className=\"navigation-item\" onClick={() => props.moveToContact()}>Contact</li>\r\n        </ul>\r\n      </div>\r\n      <ul className=\"navigation-social\">\r\n        <a href=\"https://twitter.com/VoXzE_\" target=\"_blank\"><li className=\"navigation-item\"><FontAwesomeIcon icon={faTwitter} /> Twitter</li></a>\r\n        <a href=\"https://github.com/VoXzE\" target=\"_blank\"><li className=\"navigation-item\"><FontAwesomeIcon icon={faGithub} /> Github</li></a>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation;","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./assets/css/main.scss\";\nimport Navigation from \"./components/Navigation\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faJs, faNodeJs, faVuejs, faPython, faReact, faYarn } from \"@fortawesome/free-brands-svg-icons\";\n\nconst App = () => {\n  const projectsRef: any = useRef(null);\n  const contactRef: any = useRef(null);\n\n  const moveToProjects = () => {\n    if (projectsRef.current) {\n      projectsRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  }\n\n  const moveToContact = () => {\n    if (contactRef.current) {\n      contactRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  }\n\n  const opemEmail = () => {\n    window.location.href = `mailto:voxze.business@gmail.com`;\n  }\n\n  const randomNumber = (min: number, max: number) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  const generateCommets = () => {\n    const stylesArr = [\n      \"width: 46px; height: 1px; top: 50%; left: -80px; animation: 7s linear 0s infinite meteor-1;\",\n      \"width: 46px; height: 1px; top: 207px; left: -80px; animation: 11s linear 0s infinite meteor-1;\",\n      \"right: 700px; bottom: -80px; animation: 7s linear 0s infinite meteor-2;\",\n      \"left: 0; bottom: -80px; animation: 16s linear 0s infinite meteor-2;\",\n    ];\n\n    for (let i = 0; i < 10; i++) {\n      const parentDiv = document.getElementsByClassName(\"commet-animation\");\n      const commetDiv: any = document.createElement(\"div\");\n      commetDiv.className = `meteor`\n      commetDiv.style = `${stylesArr[randomNumber(0, stylesArr.length - 1)]} animation-delay: ${i * randomNumber(100, 2000)}ms;`;\n      parentDiv[0].append(commetDiv);\n    }\n  }\n\n  useEffect(() => {\n    generateCommets();\n  }, [])\n\n  return (\n    <React.Fragment>\n      <div className=\"commet-animation\"></div>\n\n      <div className=\"container\">\n        <Navigation moveToProjects={moveToProjects} moveToContact={moveToContact} />\n\n        <div className=\"header\">\n\n          <div className=\"introduction\">\n            <label>- Introduction</label>\n            <h1>Hello! I'm Jeremiah</h1>\n            <p>\n              I'm a 20-year old, self-taught software engineer currently located in Philadelphia.\n              I currently have plans to receive a degree in computer science to further educate my self in this field.\n              I've been developing different software applications over the last 5 years.\n              I am fluent in many technologies, I primarily write my frontend applications in <em style={{ color: \"#00d8ff\" }}>React</em>, server side stuff in <em style={{ color: \"#83cd29\" }}>NodeJS</em>, while using <em style={{ color: \"#4a8abd\" }}>PostgreSQL</em> to handle data management.\n            </p>\n          </div>\n\n          <div className=\"expertise\">\n            <label>- Technologies</label>\n            <div className=\"icons\">\n              <div className=\"item\" style={{ animationDuration: \"4.1s\" }}><FontAwesomeIcon className=\"icon\" style={{ color: \"#83cd29\" }} icon={faNodeJs} /></div>\n              <div className=\"item\"><FontAwesomeIcon className=\"icon\" style={{ color: \"#4a8abd\" }} icon={faPython} /></div>\n              <div className=\"item\" style={{ animationDuration: \"4.3s\" }}><FontAwesomeIcon className=\"icon\" style={{ color: \"#3fb984\" }} icon={faVuejs} /></div>\n              <div className=\"item\"><FontAwesomeIcon className=\"icon\" style={{ color: \"#00d8ff\" }} icon={faReact} /></div>\n              <div className=\"item\" style={{ animationDuration: \"4.6s\" }}><FontAwesomeIcon className=\"icon\" style={{ color: \"#f7df1e\" }} icon={faJs} /></div>\n              <div className=\"item\"><FontAwesomeIcon className=\"icon\" style={{ color: \"#2c8ebb\" }} icon={faYarn} /></div>\n            </div>\n            <div className=\"info\">\n              These are a few of the languages and libraries I use daily.\n              I currently use these technologies for personal use and also business when doing work for clients.\n              I still plan on learning many more technologies to further expand my knowledge in this field.\n            </div>\n          </div>\n\n        </div>\n\n        <div className=\"projects\" ref={projectsRef}>\n          <label style={{ fontSize: 18 }}>- Previous Projects</label>\n          <div className=\"grid\">\n\n            <div className=\"project\">\n              <img src={require(\"./assets/site1.png\")} className=\"project-thumb\" alt=\"project-thumb\" />\n              <div className=\"links\">\n                <a href=\"https://bityz.com/\" className=\"link\" target=\"_blank\">Live</a>\n                <a href=\"https://github.com/VoXzE/mo-project\" className=\"link\" target=\"_blank\">Github</a>\n              </div>\n            </div>\n\n            <div className=\"project\">\n              <img src={require(\"./assets/site2.png\")} className=\"project-thumb\" alt=\"project-thumb\" />\n              <div className=\"links\">\n                <a href=\"https://xeno-gaming.co.uk/\" className=\"link\" target=\"_blank\">Live</a>\n                <a href=\"https://github.com/XenoGamingCommunity\" className=\"link\" target=\"_blank\">Github</a>\n              </div>\n            </div>\n\n            <div className=\"project\">\n              <img src={require(\"./assets/site7.png\")} className=\"project-thumb\" alt=\"project-thumb\" />\n              <div className=\"links\">\n                <a href=\"https://voxze.github.io/uiexpert/\" className=\"link\" target=\"_blank\">Live</a>\n                <a href=\"https://github.com/VoXzE/uiexpert\" className=\"link\" target=\"_blank\">Github</a>\n              </div>\n            </div>\n\n            <div className=\"project\">\n              <img src={require(\"./assets/site3.png\")} className=\"project-thumb\" alt=\"project-thumb\" />\n              <div className=\"links\">\n                <a href=\"https://voxze.github.io/betskinsgg\" className=\"link\" target=\"_blank\">Live</a>\n                <a href=\"https://github.com/VoXzE/betskinsgg\" className=\"link\" target=\"_blank\">Github</a>\n              </div>\n            </div>\n\n\n            <div className=\"project\">\n              <img src={require(\"./assets/site4.gif\")} className=\"project-thumb\" alt=\"project-thumb\" />\n              <div className=\"links\">\n                <a href=\"https://voxze.github.io/clip-viewer\" className=\"link\" target=\"_blank\">Live</a>\n                <a href=\"https://github.com/VoXzE/clip-viewer\" className=\"link\" target=\"_blank\">Github</a>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"contact\" ref={contactRef}>\n          <label style={{ fontSize: 18, margin: 0 }}>- Contact Me</label>\n          <div className=\"info\">\n            <p>If you are looking for freelance services feel free to contact me via email *Serious Inquiries only*</p>\n            <button className=\"contact-btn\" onClick={() => opemEmail()}>Contact</button>\n          </div>\n        </div>\n\n        <div className=\"footer\">\n          Copyright © 2000-2020 - All Rights Reserved\n        </div>\n\n      </div>\n    </React.Fragment>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}